{"ast":null,"code":"import _regeneratorRuntime from \"/home/raul/React/weather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/raul/React/weather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/raul/React/weather/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/raul/React/weather/src/App.js\";\nimport React, { useState } from 'react';\nimport { fetchWeather } from './fetchWeather';\nimport 'remixicon/fonts/remixicon.css';\nimport './App.css';\n\nfunction App() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      query = _useState2[0],\n      setQuery = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      meteo = _useState4[0],\n      setMeteo = _useState4[1];\n\n  console.log(meteo);\n\n  var search = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(e.key === 'Enter')) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 3;\n              return fetchWeather(query);\n\n            case 3:\n              data = _context.sent;\n              setMeteo(data);\n              setQuery('');\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function search(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"search\",\n    placeholder: \"Enter city name...\",\n    value: query,\n    onChange: function onChange(e) {\n      return setQuery(e.target.value);\n    },\n    onKeyPress: search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  })), meteo.main && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"city-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, meteo.name), /*#__PURE__*/React.createElement(\"sup\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, meteo.sys.country)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"city-temp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, Math.round(meteo.main.temp), /*#__PURE__*/React.createElement(\"sup\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }\n  }, \"\\xB0C\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"city-icon\",\n    src: \"https://openweathermap.org/img/wn/\".concat(meteo.weather[0].icon, \"@2x.png\"),\n    alt: meteo.weather[0].description,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, meteo.weather[0].description))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/raul/React/weather/src/App.js"],"names":["React","useState","fetchWeather","App","query","setQuery","meteo","setMeteo","console","log","search","e","key","data","target","value","main","name","sys","country","Math","round","temp","weather","icon","description"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,YAAR,QAA2B,gBAA3B;AACA,OAAO,+BAAP;AACA,OAAO,WAAP;;AAEA,SAASC,GAAT,GAAe;AAAA,kBACaF,QAAQ,CAAC,EAAD,CADrB;AAAA;AAAA,MACNG,KADM;AAAA,MACCC,QADD;;AAAA,mBAEaJ,QAAQ,CAAC,EAAD,CAFrB;AAAA;AAAA,MAENK,KAFM;AAAA,MAECC,QAFD;;AAGbC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;;AACA,MAAMI,MAAM;AAAA,wEAAG,iBAAMC,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACVA,CAAC,CAACC,GAAF,KAAU,OADA;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAEQV,YAAY,CAACE,KAAD,CAFpB;;AAAA;AAELS,cAAAA,IAFK;AAGXN,cAAAA,QAAQ,CAACM,IAAD,CAAR;AACAR,cAAAA,QAAQ,CAAC,EAAD,CAAR;;AAJW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAANK,MAAM;AAAA;AAAA;AAAA,KAAZ;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,SAAS,EAAC,QAA7B;AAAsC,IAAA,WAAW,EAAC,oBAAlD;AAAuE,IAAA,KAAK,EAAEN,KAA9E;AAAqF,IAAA,QAAQ,EAAE,kBAACO,CAAD;AAAA,aAAON,QAAQ,CAACM,CAAC,CAACG,MAAF,CAASC,KAAV,CAAf;AAAA,KAA/F;AAAgI,IAAA,UAAU,EAAEL,MAA5I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIGJ,KAAK,CAACU,IAAN,iBACC;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOV,KAAK,CAACW,IAAb,CADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMX,KAAK,CAACY,GAAN,CAAUC,OAAhB,CAFA,CADF,eAKE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKC,IAAI,CAACC,KAAL,CAAWf,KAAK,CAACU,IAAN,CAAWM,IAAtB,CADL,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ,CALF,eASE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAA2B,IAAA,GAAG,8CAAuChB,KAAK,CAACiB,OAAN,CAAc,CAAd,EAAiBC,IAAxD,YAA9B;AAAqG,IAAA,GAAG,EAAElB,KAAK,CAACiB,OAAN,CAAc,CAAd,EAAiBE,WAA3H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAInB,KAAK,CAACiB,OAAN,CAAc,CAAd,EAAiBE,WAArB,CAFF,CATF,CALJ,CADF;AAuBD;;AAED,eAAetB,GAAf","sourcesContent":["import React, {useState} from 'react'\nimport {fetchWeather} from './fetchWeather'\nimport 'remixicon/fonts/remixicon.css'\nimport './App.css'\n\nfunction App() {\n  const [query, setQuery] = useState('')\n  const [meteo, setMeteo] = useState({})\n  console.log(meteo)\n  const search = async(e) => {\n    if(e.key === 'Enter') {\n      const data = await fetchWeather(query)\n      setMeteo(data)\n      setQuery('')\n    }\n  }\n\n  return (\n    <div className=\"main-container\">\n      <div className=\"inputs\">\n        <input type=\"text\" className=\"search\" placeholder=\"Enter city name...\" value={query} onChange={(e) => setQuery(e.target.value)} onKeyPress={search}/>\n      </div>\n      {meteo.main && (\n        <div className=\"city\">\n          <h2 className=\"city-name\">\n          <span>{meteo.name}</span>\n          <sup>{meteo.sys.country}</sup>\n          </h2>\n          <div className=\"city-temp\">\n              {Math.round(meteo.main.temp)}\n              <sup>&deg;C</sup>\n          </div>\n          <div className=\"info\">\n            <img className=\"city-icon\" src={`https://openweathermap.org/img/wn/${meteo.weather[0].icon}@2x.png`} alt={meteo.weather[0].description}/>\n            <p>{meteo.weather[0].description}</p>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}